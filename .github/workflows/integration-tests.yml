name: integration-tests
on: [push, pull_request]

env:
  RUST_BACKTRACE: full
  RUST_LOG: debug
  SCCACHE_PATH: /home/runner/.cargo/bin/sccache

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install rust
        uses: ./.github/actions/rust-toolchain
        with:
          toolchain: "stable"

      - name: Build
        run: |
          cargo build --all-features

      - uses: actions/upload-artifact@v3
        with:
          name: integration-tests
          path: ./target/debug/sccache

  redis:
    runs-on: ubuntu-latest
    needs: build

    services:
      redis:
        image: redis
        ports:
          - 6379:6379

    env:
      SCCACHE_REDIS: redis://127.0.0.1
      RUSTC_WRAPPER: /home/runner/.cargo/bin/sccache

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install rust
        uses: ./.github/actions/rust-toolchain
        with:
          toolchain: "stable"

      - uses: actions/download-artifact@v3
        with:
          name: integration-tests
          path: /home/runner/.cargo/bin/
      - name: Chmod for binary
        run: chmod +x ${SCCACHE_PATH}

      - name: Test
        run: cargo clean && cargo build

      - name: Output
        run: |
          ${SCCACHE_PATH} --show-stats

          ${SCCACHE_PATH} --show-stats | grep redis

      - name: Test Twice for Cache Read
        run: cargo clean && cargo build

      - name: Output
        run: |
          ${SCCACHE_PATH} --show-stats

          ${SCCACHE_PATH} --show-stats | grep -e "Cache hits\s*[1-9]"

  s3_minio:
    runs-on: ubuntu-latest
    needs: build

    # Setup minio server
    services:
      minio:
        image: wktk/minio-server
        ports:
          - 9000:9000
        env:
          MINIO_ACCESS_KEY: "minioadmin"
          MINIO_SECRET_KEY: "minioadmin"

    env:
      SCCACHE_BUCKET: test
      SCCACHE_ENDPOINT: http://127.0.0.1:9000/
      AWS_ACCESS_KEY_ID: "minioadmin"
      AWS_SECRET_ACCESS_KEY: "minioadmin"
      AWS_EC2_METADATA_DISABLED: "true"
      RUSTC_WRAPPER: /home/runner/.cargo/bin/sccache

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Setup test bucket
        run: aws --endpoint-url http://127.0.0.1:9000/ s3 mb s3://test

      - name: Install rust
        uses: ./.github/actions/rust-toolchain
        with:
          toolchain: "stable"

      - uses: actions/download-artifact@v3
        with:
          name: integration-tests
          path: /home/runner/.cargo/bin/
      - name: Chmod for binary
        run: chmod +x ${SCCACHE_PATH}

      - name: Test
        run: cargo clean && cargo build

      - name: Output
        run: |
          ${SCCACHE_PATH} --show-stats

          ${SCCACHE_PATH} --show-stats | grep s3

      - name: Test Twice for Cache Read
        run: cargo clean && cargo build

      - name: Output
        run: |
          ${SCCACHE_PATH} --show-stats

          ${SCCACHE_PATH} --show-stats | grep -e "Cache hits\s*[1-9]"

  azblob_azurite:
    runs-on: ubuntu-latest
    needs: build

    # Setup azurite server
    services:
      azurite:
        image: mcr.microsoft.com/azure-storage/azurite
        ports:
          - 10000:10000

    env:
      SCCACHE_AZURE_BLOB_CONTAINER: "test"
      SCCACHE_AZURE_CONNECTION_STRING: "DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;"
      RUSTC_WRAPPER: /home/runner/.cargo/bin/sccache

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Setup test bucket
        run: |
          az storage container create \
              --name test \
              --connection-string ${SCCACHE_AZURE_CONNECTION_STRING}

      - name: Install rust
        uses: ./.github/actions/rust-toolchain
        with:
          toolchain: "stable"

      - uses: actions/download-artifact@v3
        with:
          name: integration-tests
          path: /home/runner/.cargo/bin/
      - name: Chmod for binary
        run: chmod +x ${SCCACHE_PATH}

      - name: Test
        run: cargo clean && cargo build

      - name: Output
        run: |
          ${SCCACHE_PATH} --show-stats

          ${SCCACHE_PATH} --show-stats | grep azblob

      - name: Test Twice for Cache Read
        run: cargo clean && cargo build

      - name: Output
        run: |
          ${SCCACHE_PATH} --show-stats

          ${SCCACHE_PATH} --show-stats | grep -e "Cache hits\s*[1-9]"

  gha:
    runs-on: ubuntu-latest
    needs: build

    env:
      SCCACHE_GHA_VERSION: "sccache_integration_tests"
      RUSTC_WRAPPER: /home/runner/.cargo/bin/sccache

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Configure Cache Env
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
            core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

      - name: Install rust
        uses: ./.github/actions/rust-toolchain
        with:
          toolchain: "stable"

      - uses: actions/download-artifact@v3
        with:
          name: integration-tests
          path: /home/runner/.cargo/bin/
      - name: Chmod for binary
        run: chmod +x ${SCCACHE_PATH}

      - name: Test
        run: cargo clean && cargo build

      - name: Output
        run: |
          ${SCCACHE_PATH} --show-stats

          ${SCCACHE_PATH} --show-stats | grep gha

      - name: Test Twice for Cache Read
        run: cargo clean && cargo build

      - name: Output
        run: |
          ${SCCACHE_PATH} --show-stats

          ${SCCACHE_PATH} --show-stats | grep -e "Cache hits\s*[1-9]"
