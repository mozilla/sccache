name: integration-tests
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install rust
        uses: ./.github/actions/rust-toolchain
        with:
          toolchain: "stable"

      - name: Build
        run: |
          cargo build --all-features

      - uses: actions/upload-artifact@v3
        with:
          name: integration-tests
          path: ./target/debug/sccache

  redis:
    runs-on: ubuntu-latest
    needs: build

    services:
      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install rust
        uses: ./.github/actions/rust-toolchain
        with:
          toolchain: "stable"

      - uses: actions/download-artifact@v3
        with:
          name: integration-tests
          path: /home/runner/.cargo/bin/
      - name: Chmod for binary
        run: chmod +x /home/runner/.cargo/bin/sccache

      - name: Test
        run: cargo clean && cargo build
        env:
          RUST_BACKTRACE: full
          RUST_LOG: debug
          RUSTC_WRAPPER: /home/runner/.cargo/bin/sccache
          SCCACHE_REDIS: redis://127.0.0.1

      - name: Output
        run: |
          /home/runner/.cargo/bin/sccache --show-stats

          /home/runner/.cargo/bin/sccache --show-stats | grep redis

      - name: Test Twice for Cache Read
        run: cargo clean && cargo build
        env:
          RUST_BACKTRACE: full
          RUST_LOG: debug
          RUSTC_WRAPPER: /home/runner/.cargo/bin/sccache
          SCCACHE_REDIS: redis://127.0.0.1

      - name: Output
        run: |
          /home/runner/.cargo/bin/sccache --show-stats

          /home/runner/.cargo/bin/sccache --show-stats | grep -e "Cache hits\s*[1-9]"

  s3_minio:
    runs-on: ubuntu-latest
    needs: build

    # Setup minio server
    services:
      minio:
        image: wktk/minio-server
        ports:
          - 9000:9000
        env:
          MINIO_ACCESS_KEY: "minioadmin"
          MINIO_SECRET_KEY: "minioadmin"

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Setup test bucket
        env:
          AWS_ACCESS_KEY_ID: "minioadmin"
          AWS_SECRET_ACCESS_KEY: "minioadmin"
          AWS_EC2_METADATA_DISABLED: "true"
        run: aws --endpoint-url http://127.0.0.1:9000/ s3 mb s3://test

      - name: Install rust
        uses: ./.github/actions/rust-toolchain
        with:
          toolchain: "stable"

      - uses: actions/download-artifact@v3
        with:
          name: integration-tests
          path: /home/runner/.cargo/bin/
      - name: Chmod for binary
        run: chmod +x /home/runner/.cargo/bin/sccache

      - name: Test
        run: cargo clean && cargo build
        env:
          RUST_BACKTRACE: full
          RUST_LOG: debug
          RUSTC_WRAPPER: /home/runner/.cargo/bin/sccache
          SCCACHE_BUCKET: test
          SCCACHE_ENDPOINT: http://127.0.0.1:9000/
          AWS_ACCESS_KEY_ID: "minioadmin"
          AWS_SECRET_ACCESS_KEY: "minioadmin"

      - name: Output
        run: |
          /home/runner/.cargo/bin/sccache --show-stats

          /home/runner/.cargo/bin/sccache --show-stats | grep s3

      - name: Test Twice for Cache Read
        run: cargo clean && cargo build
        env:
          RUST_BACKTRACE: full
          RUST_LOG: debug
          RUSTC_WRAPPER: /home/runner/.cargo/bin/sccache
          SCCACHE_BUCKET: test
          SCCACHE_ENDPOINT: http://127.0.0.1:9000/
          AWS_ACCESS_KEY_ID: "minioadmin"
          AWS_SECRET_ACCESS_KEY: "minioadmin"

      - name: Output
        run: |
          /home/runner/.cargo/bin/sccache --show-stats

          /home/runner/.cargo/bin/sccache --show-stats | grep -e "Cache hits\s*[1-9]"
