[package]
edition = "2021"
name = "sccache"
rust-version = "1.65"
version = "0.5.4"

categories = ["command-line-utilities", "development-tools::build-utils"]
description = "Sccache is a ccache-like tool. It is used as a compiler wrapper and avoids compilation when possible, storing a cache in a remote storage using various cloud storage."
keywords = ["ccache"]
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/mozilla/sccache/"

[[bin]]
name = "sccache"

[[bin]]
name = "sccache-dist"
required-features = ["dist-server"]

[profile.release]
codegen-units = 1
lto = true
strip = true

[dependencies]
anyhow = { version = "1.0", features = ["backtrace"] }
ar = "0.9"
async-trait = "0.1"
base64 = "0.21"
bincode = "1"
blake3 = "1"
byteorder = "1.0"
bytes = "1"
clap = { version = "4.1.11", features = ["derive", "env", "wrap_help"] }
directories = "5.0.0"
encoding = "0.2"
env_logger = "0.10"
filetime = "0.2"
flate2 = { version = "1.0", optional = true, default-features = false, features = [
  "rust_backend",
] }
fs-err = "2.9"
futures = "0.3"
gzp = { version = "0.11.3", default-features = false, features = [
  "deflate_rust",
] }
http = "0.2"
hyper = { version = "0.14.25", optional = true, features = ["server"] }
is-terminal = "0.4.7"
jobserver = "0.1"
jwt = { package = "jsonwebtoken", version = "8", optional = true }
libc = "0.2.140"
linked-hash-map = "0.5"
log = "0.4"
num_cpus = "1.15"
number_prefix = "0.4"
once_cell = "1.17"
opendal = { version = "0.40.0", optional = true }
openssl = { version = "0.10.55", optional = true }
rand = "0.8.4"
regex = "1.7.3"
reqsign = { version = "0.14.1", optional = true }
reqwest = { version = "0.11", features = [
  "json",
  "blocking",
  "stream",
  "rustls-tls",
  "trust-dns",
], optional = true }
retry = "2"
semver = "1.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
sha2 = { version = "0.10.6", optional = true }
strip-ansi-escapes = "0.1"
tar = "0.4.36"
tempfile = "3"
# trust-dns-resolver must be kept in sync with the version reqwest uses
mime = "0.3"
tokio = { version = "1", features = [
  "rt-multi-thread",
  "io-util",
  "time",
  "net",
  "process",
  "macros",
] }
tokio-serde = "0.8"
tokio-util = { version = "0.7", features = ["codec", "io"] }
toml = "0.7"
tower = "0.4"
trust-dns-resolver = { version = "0.22.0", features = [
  "dnssec-ring",
  "dns-over-rustls",
  "dns-over-https-rustls",
], optional = true }
url = { version = "2", optional = true }
uuid = { version = "1.3", features = ["v4"] }
walkdir = "2"
# by default which pulls in an outdated failure version
which = { version = "4", default-features = false }
zip = { version = "0.6", default-features = false }
zstd = "0.12"

# dist-server only
memmap2 = "0.6.2"
nix = { version = "0.26.2", optional = true }
object = "0.30"
rouille = { version = "3.5", optional = true, default-features = false, features = [
  "ssl",
] }
syslog = { version = "6", optional = true }
version-compare = { version = "0.1.1", optional = true }

[dev-dependencies]
assert_cmd = "2.0.10"
cc = "1.0"
chrono = "0.4.26"
itertools = "0.10"
predicates = "=3.0.3"
serial_test = "2.0"
temp-env = "0.3.4"
thirtyfour_sync = "0.27"

[target.'cfg(unix)'.dependencies]
daemonize = "0.5"

[target.'cfg(not(target_os = "freebsd"))'.dependencies.libmount]
optional = true
version = "0.1.10"

[target.'cfg(windows)'.dependencies.winapi]
features = ["fileapi", "handleapi", "stringapiset", "winnls"]
version = "0.3"

[features]
all = [
  "dist-client",
  "redis",
  "s3",
  "memcached",
  "gcs",
  "azure",
  "gha",
  "webdav",
]
azure = ["opendal", "reqsign"]
default = ["all"]
gcs = ["opendal", "reqsign", "url", "reqwest/blocking", "trust-dns-resolver"]
gha = ["opendal"]
memcached = ["opendal/services-memcached"]
native-zlib = []
redis = ["url", "opendal/services-redis", "opendal/services-redis-rustls"]
s3 = ["opendal", "reqsign"]
webdav = ["opendal"]
# Enable features that will build a vendored version of openssl and
# statically linked with it, instead of linking against the system-wide openssl
# dynamically or statically.
vendored-openssl = ["openssl?/vendored", "opendal?/native-tls-vendored"]
# Enable features that require unstable features of Nightly Rust.
unstable = []
# Enables distributed support in the sccache client
dist-client = [
  "flate2",
  "hyper",
  "reqwest",
  "url",
  "sha2",
  "trust-dns-resolver",
]
# Enables the sccache-dist binary
dist-server = [
  "jwt",
  "flate2",
  "libmount",
  "nix",
  "openssl",
  "reqwest",
  "rouille",
  "syslog",
  "trust-dns-resolver",
  "version-compare",
]
# Enables dist tests with external requirements
dist-tests = ["dist-client", "dist-server"]

[workspace]
exclude = ["tests/test-crate"]
